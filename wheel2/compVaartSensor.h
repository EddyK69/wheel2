float targetRpm = 0;

#define sampleMax 65500               //samples



class COMPVAART{
  public:
    volatile unsigned int vaartInterval;
    volatile unsigned int sampleNum;
    volatile          int samples[100];
    volatile unsigned int sampleTeller = 0;
    volatile unsigned long tijd;
    volatile unsigned int interval;
    float vaart;
    float gemiddelde = sampleMax;

    float glad;

    int glitchTeller;

    bool Anu;
    bool Aoud;
    int dir;

    float pulsenPerRev;
    int teller = 0;
    int pin;

    float compensatie[600];
    // float compensatieAct[600] = {1.0076, 1.0067, 1.0090, 1.0103, 1.0062, 1.0049, 1.0071, 1.0076, 1.0060, 1.0105, 1.0051, 1.0069, 1.0068, 1.0059, 1.0069, 1.0053, 1.0078, 1.0028, 1.0061, 1.0044, 1.0049, 1.0002, 1.0058, 1.0036, 1.0023, 0.9998, 1.0005, 0.9975, 1.0030, 1.0013, 1.0010, 0.9942, 0.9943, 0.9980, 0.9955, 0.9964, 0.9933, 0.9964, 0.9914, 0.9916, 0.9885, 0.9902, 0.9907, 0.9934, 0.9900, 0.9898, 0.9869, 0.9861, 0.9868, 0.9819, 0.9903, 0.9870, 0.9874, 0.9865, 0.9876, 0.9904, 0.9847, 0.9906, 0.9868, 0.9874, 0.9862, 0.9877, 0.9876, 0.9870, 0.9909, 0.9882, 0.9903, 0.9860, 0.9906, 0.9888, 0.9850, 0.9891, 0.9898, 0.9905, 0.9939, 0.9938, 0.9935, 0.9948, 1.0006, 1.0015, 0.9991, 1.0020, 1.0025, 0.9977, 1.0035, 0.9999, 1.0044, 1.0051, 1.0058, 1.0081, 1.0069, 1.0073, 1.0124, 1.0128, 1.0114, 1.0119, 1.0125, 1.0100, 1.0162, 1.0151, 1.0133, 1.0194, 1.0167, 1.0156, 1.0204, 1.0207, 1.0191, 1.0160, 1.0235, 1.0181, 1.0146, 1.0196, 1.0198, 1.0219, 1.0180, 1.0220, 1.0177, 1.0185, 1.0226, 1.0256, 1.0162, 1.0176, 1.0153, 1.0150, 1.0176, 1.0122, 1.0156, 1.0142, 1.0126, 1.0098, 1.0112, 1.0065, 1.0062, 1.0047, 1.0055, 1.0052, 1.0035, 1.0033, 1.0060, 1.0023, 1.0032, 1.0014, 0.9981, 0.9941, 0.9970, 0.9933, 0.9990, 0.9981, 0.9982, 0.9980, 0.9945, 0.9940, 0.9911, 0.9930, 0.9933, 0.9946, 0.9925, 0.9919, 0.9937, 0.9885, 0.9913, 0.9888, 0.9930, 0.9904, 0.9873, 0.9894, 0.9943, 0.9884, 0.9918, 0.9936, 0.9925, 0.9924, 0.9927, 0.9915, 0.9910, 0.9939, 0.9932, 0.9941, 0.9922, 0.9969, 0.9954, 0.9963, 0.9956, 0.9948, 0.9970, 0.9978, 0.9969, 0.9998, 1.0004, 0.9963, 0.9956, 1.0003, 0.9980, 0.9969, 1.0064, 1.0036, 1.0000, 1.0041, 1.0015, 1.0055, 1.0057, 1.0042, 1.0059, 1.0023, 1.0045, 1.0073, 1.0063, 1.0071, 1.0082, 1.0063, 1.0048, 1.0034, 1.0064, 1.0058, 1.0068, 1.0035, 1.0050, 1.0044, 1.0074, 1.0060, 1.0038, 1.0075, 1.0049, 1.0023, 1.0044, 1.0001, 1.0029, 1.0046, 0.9997, 0.9998, 0.9963, 1.0013, 0.9985, 0.9991, 0.9978, 0.9993, 0.9957, 0.9904, 0.9973, 0.9929, 0.9923, 0.9931, 0.9930, 0.9903, 0.9913, 0.9883, 0.9863, 0.9889, 0.9871, 0.9887, 0.9869, 0.9829, 0.9882, 0.9861, 0.9854, 0.9897, 0.9875, 0.9837, 0.9878, 0.9873, 0.9839, 0.9837, 0.9863, 0.9847, 0.9835, 0.9878, 0.9867, 0.9847, 0.9866, 0.9911, 0.9843, 0.9909, 0.9886, 0.9888, 0.9862, 0.9902, 0.9948, 0.9962, 0.9902, 0.9947, 0.9963, 0.9931, 0.9955, 0.9974, 0.9939, 0.9989, 0.9981, 0.9942, 0.9986, 1.0004, 0.9999, 0.9986, 1.0049, 1.0037, 1.0045, 1.0031, 1.0096, 1.0057, 1.0065, 1.0100, 1.0103, 1.0058, 1.0097, 1.0127, 1.0115, 1.0131, 1.0137, 1.0153, 1.0086, 1.0175, 1.0148, 1.0140, 1.0166, 1.0167, 1.0176, 1.0161, 1.0177, 1.0153, 1.0155, 1.0135, 1.0182, 1.0207, 1.0164, 1.0149, 1.0172, 1.0154, 1.0169, 1.0134, 1.0112, 1.0110, 1.0125, 1.0123, 1.0127, 1.0117, 1.0109, 1.0091, 1.0048, 1.0100, 1.0048, 1.0046, 1.0020, 1.0059, 1.0034, 1.0016, 1.0019, 0.9993, 0.9990, 0.9998, 0.9993, 0.9965, 0.9962, 0.9952, 0.9933, 0.9935, 0.9941, 0.9939, 0.9908, 0.9945, 0.9918, 0.9916, 0.9926, 0.9916, 0.9883, 0.9885, 0.9885, 0.9931, 0.9887, 0.9883, 0.9935, 0.9903, 0.9920, 0.9907, 0.9871, 0.9875, 0.9897, 0.9951, 0.9924, 0.9901, 0.9939, 0.9898, 0.9903, 0.9946, 0.9913, 0.9933, 0.9920, 0.9943, 0.9935, 0.9950, 0.9987, 0.9934, 0.9986, 1.0034, 1.0004, 0.9981, 0.9985, 0.9994, 1.0019, 1.0009, 1.0017, 0.9999, 1.0028, 1.0000, 1.0061, 1.0045, 1.0036, 1.0069, 1.0044, 0.9991, 1.0030, 1.0055};
    // float compensatieAct[600] = {1.0098, 1.0094, 1.0118, 1.0102, 1.0084, 1.0082, 1.0080, 1.0080, 1.0082, 1.0096, 1.0092, 1.0087, 1.0069, 1.0074, 1.0074, 1.0070, 1.0074, 1.0060, 1.0063, 1.0047, 1.0035, 1.0025, 1.0032, 1.0045, 1.0025, 1.0000, 0.9993, 0.9996, 0.9978, 0.9984, 0.9981, 0.9967, 0.9951, 0.9939, 0.9942, 0.9929, 0.9917, 0.9924, 0.9907, 0.9894, 0.9891, 0.9883, 0.9873, 0.9870, 0.9870, 0.9859, 0.9845, 0.9839, 0.9837, 0.9840, 0.9849, 0.9836, 0.9843, 0.9819, 0.9817, 0.9828, 0.9817, 0.9834, 0.9842, 0.9823, 0.9823, 0.9827, 0.9841, 0.9839, 0.9853, 0.9853, 0.9856, 0.9863, 0.9867, 0.9877, 0.9887, 0.9901, 0.9904, 0.9910, 0.9908, 0.9921, 0.9938, 0.9946, 0.9974, 0.9982, 0.9962, 0.9985, 0.9987, 1.0013, 1.0024, 1.0041, 1.0051, 1.0050, 1.0053, 1.0066, 1.0082, 1.0097, 1.0125, 1.0125, 1.0115, 1.0127, 1.0144, 1.0152, 1.0161, 1.0171, 1.0176, 1.0176, 1.0176, 1.0182, 1.0185, 1.0198, 1.0198, 1.0210, 1.0207, 1.0205, 1.0219, 1.0216, 1.0227, 1.0220, 1.0228, 1.0217, 1.0213, 1.0205, 1.0206, 1.0211, 1.0188, 1.0178, 1.0165, 1.0157, 1.0163, 1.0157, 1.0147, 1.0135, 1.0113, 1.0096, 1.0090, 1.0086, 1.0086, 1.0073, 1.0050, 1.0043, 1.0033, 1.0015, 1.0002, 1.0006, 1.0000, 0.9986, 0.9967, 0.9963, 0.9951, 0.9955, 0.9940, 0.9945, 0.9940, 0.9913, 0.9911, 0.9914, 0.9912, 0.9907, 0.9907, 0.9883, 0.9885, 0.9884, 0.9882, 0.9881, 0.9889, 0.9883, 0.9880, 0.9873, 0.9878, 0.9879, 0.9882, 0.9896, 0.9884, 0.9886, 0.9893, 0.9900, 0.9897, 0.9918, 0.9913, 0.9919, 0.9930, 0.9924, 0.9933, 0.9949, 0.9955, 0.9976, 0.9955, 0.9968, 0.9972, 0.9991, 0.9998, 1.0008, 1.0016, 1.0016, 1.0017, 1.0029, 1.0037, 1.0051, 1.0057, 1.0067, 1.0057, 1.0061, 1.0064, 1.0082, 1.0075, 1.0089, 1.0098, 1.0090, 1.0103, 1.0110, 1.0117, 1.0129, 1.0107, 1.0104, 1.0102, 1.0085, 1.0093, 1.0099, 1.0094, 1.0109, 1.0098, 1.0084, 1.0074, 1.0078, 1.0069, 1.0073, 1.0069, 1.0071, 1.0041, 1.0043, 1.0041, 1.0034, 1.0033, 1.0028, 1.0005, 1.0000, 0.9988, 0.9989, 0.9983, 0.9975, 0.9967, 0.9959, 0.9938, 0.9938, 0.9925, 0.9927, 0.9924, 0.9919, 0.9903, 0.9892, 0.9885, 0.9882, 0.9889, 0.9873, 0.9872, 0.9853, 0.9851, 0.9856, 0.9852, 0.9856, 0.9849, 0.9854, 0.9849, 0.9845, 0.9841, 0.9855, 0.9858, 0.9861, 0.9849, 0.9845, 0.9859, 0.9862, 0.9864, 0.9876, 0.9885, 0.9883, 0.9892, 0.9889, 0.9897, 0.9908, 0.9924, 0.9931, 0.9937, 0.9923, 0.9951, 0.9953, 0.9962, 0.9987, 0.9991, 0.9994, 0.9998, 1.0012, 1.0018, 1.0040, 1.0051, 1.0063, 1.0053, 1.0063, 1.0082, 1.0079, 1.0100, 1.0118, 1.0112, 1.0112, 1.0121, 1.0130, 1.0139, 1.0153, 1.0164, 1.0160, 1.0161, 1.0162, 1.0157, 1.0179, 1.0185, 1.0178, 1.0184, 1.0186, 1.0187, 1.0188, 1.0199, 1.0208, 1.0203, 1.0194, 1.0183, 1.0185, 1.0190, 1.0195, 1.0184, 1.0164, 1.0154, 1.0146, 1.0138, 1.0126, 1.0135, 1.0120, 1.0100, 1.0094, 1.0084, 1.0056, 1.0066, 1.0067, 1.0046, 1.0037, 1.0017, 1.0012, 0.9995, 1.0001, 0.9990, 0.9975, 0.9969, 0.9944, 0.9946, 0.9938, 0.9939, 0.9930, 0.9916, 0.9908, 0.9896, 0.9889, 0.9884, 0.9897, 0.9898, 0.9880, 0.9863, 0.9864, 0.9875, 0.9855, 0.9874, 0.9873, 0.9865, 0.9856, 0.9858, 0.9852, 0.9856, 0.9875, 0.9871, 0.9871, 0.9873, 0.9873, 0.9876, 0.9871, 0.9894, 0.9893, 0.9901, 0.9897, 0.9907, 0.9909, 0.9919, 0.9944, 0.9933, 0.9946, 0.9948, 0.9948, 0.9971, 0.9969, 0.9991, 0.9985, 0.9993, 0.9990, 1.0010, 1.0005, 1.0032, 1.0046, 1.0047, 1.0037, 1.0044, 1.0058, 1.0047, 1.0075, 1.0080, 1.0076, 1.0073, 1.0092};
    // float compensatieAct[600] = {1.0093, 1.0082, 1.0088, 1.0099, 1.0109, 1.0101, 1.0104, 1.0102, 1.0088, 1.0088, 1.0096, 1.0093, 1.0098, 1.0096, 1.0090, 1.0074, 1.0075, 1.0074, 1.0073, 1.0064, 1.0059, 1.0072, 1.0068, 1.0063, 1.0047, 1.0033, 1.0031, 1.0035, 1.0030, 1.0034, 1.0023, 1.0004, 1.0007, 0.9999, 0.9977, 0.9977, 0.9985, 0.9970, 0.9976, 0.9969, 0.9955, 0.9941, 0.9929, 0.9925, 0.9915, 0.9910, 0.9914, 0.9911, 0.9899, 0.9891, 0.9878, 0.9871, 0.9876, 0.9859, 0.9867, 0.9865, 0.9861, 0.9848, 0.9850, 0.9839, 0.9831, 0.9832, 0.9820, 0.9825, 0.9828, 0.9828, 0.9819, 0.9826, 0.9810, 0.9804, 0.9815, 0.9817, 0.9828, 0.9826, 0.9824, 0.9823, 0.9829, 0.9818, 0.9830, 0.9834, 0.9838, 0.9845, 0.9855, 0.9851, 0.9855, 0.9865, 0.9855, 0.9867, 0.9875, 0.9888, 0.9897, 0.9905, 0.9906, 0.9909, 0.9918, 0.9924, 0.9935, 0.9948, 0.9961, 0.9969, 0.9974, 0.9971, 0.9977, 0.9989, 1.0006, 1.0006, 1.0022, 1.0039, 1.0041, 1.0052, 1.0047, 1.0060, 1.0060, 1.0069, 1.0083, 1.0096, 1.0109, 1.0108, 1.0111, 1.0123, 1.0122, 1.0130, 1.0138, 1.0158, 1.0152, 1.0163, 1.0160, 1.0167, 1.0164, 1.0168, 1.0176, 1.0188, 1.0194, 1.0200, 1.0198, 1.0188, 1.0197, 1.0195, 1.0197, 1.0209, 1.0216, 1.0215, 1.0211, 1.0209, 1.0211, 1.0184, 1.0197, 1.0193, 1.0190, 1.0193, 1.0181, 1.0173, 1.0165, 1.0157, 1.0151, 1.0148, 1.0145, 1.0142, 1.0136, 1.0121, 1.0110, 1.0098, 1.0089, 1.0085, 1.0069, 1.0074, 1.0070, 1.0051, 1.0047, 1.0027, 1.0012, 1.0005, 1.0015, 1.0003, 1.0001, 0.9997, 0.9983, 0.9971, 0.9964, 0.9962, 0.9946, 0.9942, 0.9941, 0.9938, 0.9933, 0.9932, 0.9914, 0.9901, 0.9898, 0.9895, 0.9908, 0.9900, 0.9902, 0.9892, 0.9881, 0.9886, 0.9875, 0.9882, 0.9868, 0.9881, 0.9880, 0.9886, 0.9878, 0.9868, 0.9866, 0.9870, 0.9877, 0.9877, 0.9883, 0.9890, 0.9885, 0.9900, 0.9889, 0.9881, 0.9894, 0.9901, 0.9915, 0.9912, 0.9912, 0.9919, 0.9922, 0.9913, 0.9927, 0.9929, 0.9940, 0.9966, 0.9966, 0.9964, 0.9965, 0.9975, 0.9971, 0.9971, 0.9983, 1.0001, 1.0007, 1.0013, 1.0013, 1.0018, 1.0024, 1.0026, 1.0022, 1.0036, 1.0059, 1.0057, 1.0068, 1.0058, 1.0063, 1.0059, 1.0054, 1.0073, 1.0084, 1.0079, 1.0092, 1.0079, 1.0081, 1.0091, 1.0100, 1.0100, 1.0106, 1.0124, 1.0110, 1.0111, 1.0116, 1.0108, 1.0098, 1.0098, 1.0100, 1.0110, 1.0119, 1.0103, 1.0100, 1.0084, 1.0086, 1.0080, 1.0073, 1.0063, 1.0080, 1.0076, 1.0082, 1.0065, 1.0050, 1.0041, 1.0045, 1.0044, 1.0041, 1.0042, 1.0029, 1.0017, 1.0018, 1.0008, 0.9990, 0.9982, 0.9987, 0.9988, 0.9975, 0.9977, 0.9964, 0.9950, 0.9947, 0.9939, 0.9934, 0.9943, 0.9937, 0.9927, 0.9921, 0.9910, 0.9908, 0.9891, 0.9898, 0.9893, 0.9893, 0.9888, 0.9890, 0.9874, 0.9873, 0.9861, 0.9858, 0.9863, 0.9869, 0.9874, 0.9856, 0.9858, 0.9861, 0.9853, 0.9844, 0.9845, 0.9850, 0.9859, 0.9870, 0.9862, 0.9865, 0.9866, 0.9860, 0.9861, 0.9866, 0.9869, 0.9887, 0.9893, 0.9894, 0.9893, 0.9893, 0.9893, 0.9892, 0.9904, 0.9922, 0.9938, 0.9934, 0.9948, 0.9946, 0.9946, 0.9947, 0.9960, 0.9968, 0.9985, 0.9998, 1.0001, 0.9995, 0.9994, 1.0009, 1.0018, 1.0035, 1.0048, 1.0053, 1.0063, 1.0065, 1.0070, 1.0078, 1.0070, 1.0082, 1.0103, 1.0117, 1.0126, 1.0123, 1.0126, 1.0128, 1.0135, 1.0133, 1.0136, 1.0159, 1.0173, 1.0161, 1.0170, 1.0168, 1.0168, 1.0170, 1.0182, 1.0184, 1.0208, 1.0198, 1.0192, 1.0204, 1.0200, 1.0193, 1.0194, 1.0203, 1.0207, 1.0217, 1.0210, 1.0206, 1.0207, 1.0196, 1.0197, 1.0189, 1.0191, 1.0198, 1.0187, 1.0181, 1.0173, 1.0160, 1.0145, 1.0144, 1.0143, 1.0152, 1.0145, 1.0130, 1.0114, 1.0109, 1.0092, 1.0084, 1.0068, 1.0070, 1.0080, 1.0074, 1.0047, 1.0044, 1.0035, 1.0013, 1.0004, 1.0000, 1.0007, 1.0007, 0.9992, 0.9973, 0.9971, 0.9965, 0.9957, 0.9952, 0.9940, 0.9946, 0.9940, 0.9937, 0.9932, 0.9916, 0.9910, 0.9894, 0.9893, 0.9892, 0.9905, 0.9903, 0.9875, 0.9880, 0.9879, 0.9876, 0.9871, 0.9865, 0.9875, 0.9874, 0.9875, 0.9868, 0.9864, 0.9856, 0.9863, 0.9869, 0.9866, 0.9866, 0.9887, 0.9879, 0.9880, 0.9880, 0.9868, 0.9875, 0.9878, 0.9893, 0.9898, 0.9897, 0.9901, 0.9894, 0.9899, 0.9908, 0.9913, 0.9916, 0.9929, 0.9947, 0.9938, 0.9944, 0.9948, 0.9943, 0.9955, 0.9960, 0.9968, 0.9983, 0.9996, 0.9985, 1.0005, 0.9999, 1.0007, 1.0012, 1.0013, 1.0026, 1.0046, 1.0046, 1.0041, 1.0037, 1.0041, 1.0047, 1.0057, 1.0064, 1.0064, 1.0075, 1.0070, 1.0064, 1.0078};
    float compensatieAct[600] = {2.2630, 2.2718, 2.2744, 2.2728, 2.2617, 2.2689, 2.2790, 2.2772, 2.2814, 2.2928, 2.2950, 2.2966, 2.2982, 2.2781, 2.3076, 2.3065, 2.2936, 2.2991, 2.3029, 2.2920, 2.3039, 2.3025, 2.2941, 2.2929, 2.2909, 2.2867, 2.2834, 2.2814, 2.2813, 2.2678, 2.2688, 2.2613, 2.2533, 2.2599, 2.2450, 2.2416, 2.2450, 2.2305, 2.2364, 2.2172, 2.2267, 2.2238, 2.2197, 2.2112, 2.2051, 2.2087, 2.1982, 2.1987, 2.1923, 2.1923, 2.1932, 2.1804, 2.1813, 2.1690, 2.1738, 2.1640, 2.1669, 2.1578, 2.1523, 2.1497, 2.1517, 2.1459, 2.1393, 2.1442, 2.1243, 2.1331, 2.1171, 2.1363, 2.1194, 2.1290, 2.1164, 2.1211, 2.1190, 2.1111, 2.1133, 2.1256, 2.1156, 2.1165, 2.1184, 2.1228, 2.1177, 2.1170, 2.1130, 2.1193, 2.1187, 2.1285, 2.1202, 2.1322, 2.1209, 2.1308, 2.1259, 2.1234, 2.1275, 2.1394, 2.1304, 2.1248, 2.1336, 2.1367, 2.1331, 2.1321, 2.1440, 2.1413, 2.1402, 2.1401, 2.1522, 2.1493, 2.1525, 2.1486, 2.1602, 2.1588, 2.1652, 2.1579, 2.1726, 2.1670, 2.1701, 2.1712, 2.1775, 2.1710, 2.1711, 2.1802, 2.1745, 2.1817, 2.1778, 2.1720, 2.1834, 2.1742, 2.1786, 2.1852, 2.1734, 2.1812, 2.1894, 2.1800, 2.1858, 2.1960, 2.1943, 2.1905, 2.1917, 2.1985, 2.1879, 2.1846, 2.1884, 2.1909, 2.1777, 2.1783, 2.1897, 2.1777, 2.1780, 2.1707, 2.1698, 2.1626, 2.1621, 2.1646, 2.1606, 2.1590, 2.1567, 2.1607, 2.1575, 2.1409, 2.1547, 2.1456, 2.1493, 2.1384, 2.1402, 2.1283, 2.1424, 2.1300, 2.1432, 2.1242, 2.1368, 2.1170, 2.1391, 2.1227, 2.1337, 2.1013, 2.1376, 2.1188, 2.1367, 2.1169, 2.1328, 2.1204, 2.1402, 2.1176, 2.1340, 2.1189, 2.1404, 2.1275, 2.1331, 2.1349, 2.1384, 2.1423, 2.1381, 2.1402, 2.1546, 2.1382, 2.1481, 2.1527, 2.1525, 2.1553, 2.1551, 2.1615, 2.1639, 2.1627, 2.1686, 2.1690, 2.1664, 2.1722, 2.1730, 2.1838, 2.1775, 2.1887, 2.1883, 2.1985, 2.1911, 2.2020, 2.2074, 2.2034, 2.2113, 2.2000, 2.2197, 2.2128, 2.2247, 2.2229, 2.2146, 2.2329, 2.2253, 2.2352, 2.2296, 2.2358, 2.2425, 2.2368, 2.2526, 2.2519, 2.2440, 2.2595, 2.2497, 2.2554, 2.2483, 2.2584, 2.2514, 2.2503, 2.2550, 2.2362, 2.2505, 2.2445, 2.2352, 2.2322, 2.2202, 2.2214, 2.2247, 2.2208, 2.2150, 2.2150, 2.2090, 2.1994, 2.2038, 2.1953, 2.1980, 2.1918, 2.1782, 2.1865, 2.1767, 2.1797, 2.1462, 2.1568, 2.1456, 2.1552, 2.1279, 2.1310, 2.1259, 2.1235, 2.1075, 2.1146, 2.0903, 2.0916, 2.0863, 2.0849, 2.0746, 2.0712, 2.0588, 2.0605, 2.0505, 2.0430, 2.0358, 2.0369, 2.0343, 2.0125, 2.0276, 2.0139, 2.0013, 2.0041, 2.0006, 2.0038, 1.9928, 1.9991, 1.9826, 1.9768, 1.9821, 1.9772, 1.9699, 1.9678, 1.9610, 1.9684, 1.9556, 1.9557, 1.9597, 1.9490, 1.9570, 1.9361, 1.9421, 1.9620, 1.9379, 1.9457, 1.9459, 1.9536, 1.9486, 1.9356, 1.9438, 1.9522, 1.9389, 1.9618, 1.9312, 1.9479, 1.9559, 1.9415, 1.9611, 1.9468, 1.9472, 1.9625, 1.9429, 1.9501, 1.9703, 1.9532, 1.9712, 1.9586, 1.9582, 1.9889, 1.9690, 1.9884, 1.9841, 1.9842, 1.9914, 1.9861, 2.0189, 1.9997, 2.0217, 2.0154, 2.0205, 2.0300, 2.0111, 2.0609, 2.0356, 2.0580, 2.0330, 2.0762, 2.0451, 2.0640, 2.0726, 2.0790, 2.0759, 2.0812, 2.0858, 2.0916, 2.0904, 2.0951, 2.0989, 2.0998, 2.1082, 2.1103, 2.1090, 2.1072, 2.1197, 2.1114, 2.1318, 2.1152, 2.1286, 2.1218, 2.1396, 2.1240, 2.1441, 2.1318, 2.1567, 2.1414, 2.1419, 2.1586, 2.1456, 2.1555, 2.1473, 2.1530, 2.1490, 2.1515, 2.1515, 2.1440, 2.1310, 2.1386, 2.1376, 2.1342, 2.1217, 2.1240, 2.1178, 2.1283, 2.1140, 2.1062, 2.0925, 2.1063, 2.1007, 2.0942, 2.0807, 2.0936, 2.0751, 2.0749, 2.0641, 2.0670, 2.0713, 2.0543, 2.0546, 2.0382, 2.0550, 2.0274, 2.0370, 2.0280, 2.0310, 2.0163, 1.9983, 2.0230, 2.0009, 1.9975, 1.9884, 1.9770, 2.0035, 1.9715, 1.9814, 1.9820, 1.9564, 1.9800, 1.9601, 1.9806, 1.9618, 1.9502, 1.9627, 1.9566, 1.9612, 1.9680, 1.9517, 1.9579, 1.9518, 1.9591, 1.9578, 1.9441, 1.9676, 1.9458, 1.9642, 1.9535, 1.9394, 1.9634, 1.9513, 1.9537, 1.9638, 1.9538, 1.9551, 1.9622, 1.9640, 1.9651, 1.9684, 1.9688, 1.9731, 1.9753, 1.9809, 1.9808, 1.9983, 1.9969, 1.9995, 2.0124, 2.0128, 2.0164, 2.0260, 2.0372, 2.0450, 2.0456, 2.0600, 2.0626, 2.0622, 2.0688, 2.0838, 2.0906, 2.0869, 2.0987, 2.0982, 2.1091, 2.1085, 2.1206, 2.1156, 2.1236, 2.1324, 2.1389, 2.1380, 2.1510, 2.1549, 2.1593, 2.1636, 2.1779, 2.1847, 2.1859, 2.2011, 2.2026, 2.2157, 2.2262, 2.2299, 2.2337, 2.2303, 2.2467, 2.2510, 2.2607};
    int compensatiePerSample = 8;




    COMPVAART(int samps, int p, float ppr){
      sampleNum = samps;
      pin = p;
      pulsenPerRev = ppr;
      clearSamples();
    }






    void interrupt(){
      tijd = micros();

      Aoud = Anu;     
      Anu = gpio_get(plateauA);

      if(Anu && !Aoud){
        dir = 1;
        if(gpio_get(plateauB)){
          dir = -1;
        }
      }
      else{
        return;
      }   
      
      
      interval = tijd - vaartInterval;
      vaartInterval = tijd;
      
      if(interval > sampleMax){interval = sampleMax;}
      

      shiftSamples(interval * dir);
      // shiftSamples(interval);

      // teller = limieteerI(teller + dir,   0,   pulsenPerRev);  
      teller += dir;
      if(teller >= pulsenPerRev){teller = 0;}
      if(teller < 0){teller = pulsenPerRev - 1;}
    }



    



    void printSamples(){
      // Serial.print("s: ");
      // for(byte i = 0;   i < sampleNum;   i++){
      //   Serial.print(samples[i]);
      //   Serial.print(", ");
      // }
      // Serial.println();
      Serial.print("c: ");
      for(int i = 0;   i < pulsenPerRev / compensatiePerSample;   i++){
        Serial.print(compensatie[i], 4);
        Serial.print(", ");
      }
      Serial.println();
    }




    float getVaart(){

      if(micros() - tijd > sampleMax){
        
        glitchTeller++;

        if(glitchTeller > 6){
          glitchTeller = 0;
          clearSamples();        
        }
      
      }else{
        glitchTeller = 0;
      }
      
      gemiddelde = gemiddeldeInterval();
      vaart =  huidigeVaart();

      
      // vaart *= compensatieAct[teller / compensatiePerSample]; // compenseren
      
      float b = targetRpm / vaart; //compenstaie berekenen
      compensatie[teller / compensatiePerSample]    +=    (b - compensatie[teller / compensatiePerSample]) / 12;
      
      // return vaart * compensatieAct[teller / compensatiePerSample]; // compenseren

      return vaart;//niet compensenre
    }    






    float getGlad(){
      glad += (vaart - glad) / 10;
      return glad;
    }




    void shiftSamples(int samp){
      samples[ sampleTeller++ % sampleNum ] = samp;   
    }



    void clearSamples(){
      for(int i = 0; i < sampleNum; i++){
        samples[i] = sampleMax;        
      }
    }



    double gemiddeldeInterval(){
      double totaal = 0;
      
      for(byte i = 0;   i < sampleNum;   i++){
        totaal += samples[i];
      }
      return totaal / sampleNum;      
    }



    float huidigeVaart(){//                                                           RPM BEREKENEN
      if(gemiddelde >= sampleMax){
        return 0;          
      }
      // return (1000000 / gemiddeldeInterval())/4;  //  return totaal
      // return (((1000000.0 / gemiddelde)*60) / pulsenPerRev;  //  return totaal
      return (((1000000.0 * 60) / gemiddelde)) / pulsenPerRev;  //  return totaal

    }



};